# *******************************************************************************************
# *******************************************************************************************
#
#		Name : 		makebuild.py
#		Purpose :	Build the build file from asm/inc (Graphics version)
#		Date :		11th October 2022
#		Author : 	Paul Robson (paul@robsons.org.uk)
#
# *******************************************************************************************
# *******************************************************************************************

import os,sys,re

sourceFiles = []																			# source files in order

for root,dirs,files in os.walk("."): 														# scan for directories
	for f in files: 																		# look for files that are .asm
		if f != "_graphics.asm":
			fName = root + os.sep + f
			if fName.endswith(".asm"):
				sourceFiles.append(fName)
sourceFiles.sort()

#
#		Create the composite file to build the whole thing.
#
h = open("_graphics.asm","w") 																# create the build file.
h.write(";\n;\tThis file is automatically generated\n;\n")  								# output the build file
h.write("\ngraphicsIntegrated = {0}\n\n".format(sys.argv[1]))
for f in sourceFiles:
	h.write('\t.include\t"{0}"\n'.format(f.replace(os.sep,"/")))
h.close()
#
#		Scan files for codes.
#
codes = {}
for f in sourceFiles:
	for s in open(f).readlines():
		if s.find(";;") > 0:
			m = re.match("^(.*?)\\:\\s*\\;\\;\\s*\\[(\\d+)\\:(.*?)\\]",s)
			assert m is not None,s+" bad"
			n = int(m.group(2))
			assert n not in codes,"Duplicate "+s
			codes[n] = [m.group(1),m.group(3)]
#
#		Write out vector table
#			
h = open("aa.main/vectors.asm","w")
h.write(";\n;\tThis file is automatically generated\n;\n")
h.write("GRVectorTable:\n")
for i in range(0,32):
	if i in codes:
		h.write("\t.word\t{0:24} ; ${1:02x} {2}\n".format(codes[i][0],i,codes[i][1]))
	else:
		h.write("\t.word\t{0:24} ; ${1:02x}\n".format("GRUndefined",i))
h.close()			