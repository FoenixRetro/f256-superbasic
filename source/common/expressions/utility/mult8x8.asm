; ************************************************************************************************
; ************************************************************************************************
;
;		Name:		mult8x8.asm
;		Purpose:	8 x 8 bit multiply
;		Created:	2nd October 2022
;		Reviewed: 	27th November 2022
;		Author:		Paul Robson (paul@robsons.org.uk)
;					Original by Damian Yerrick
;
; ************************************************************************************************
; ************************************************************************************************

		.section	code

; ************************************************************************************************
;
;							Multiply A by X, result in zTemp0
;
; ************************************************************************************************

Multiply8x8:
  		lsr 	a  							; prime the carry bit for the loop
	  	sta 	zTemp0
		stx 	zTemp0+1
		lda 	#0
		ldx 	#8
_M88Loop:
		bcc 	_M88NoAdd
		clc
		adc 	zTemp0+1
_M88NoAdd:
		ror 	a
		ror 	zTemp0  					; pull another bit out for the next iteration
		dex         						; inc/dec don't modify carry; only shifts and adds do
		bne 	_M88Loop
		sta 	zTemp0+1 					; store high 8 bits.
		rts

		.send code

; ************************************************************************************************
;
;									Changes and Updates
;
; ************************************************************************************************
;
;		Date			Notes
;		==== 			=====
;
; ************************************************************************************************
