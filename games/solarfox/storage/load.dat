1000 '
1010 ' "Solarfox in SuperBasic"
1020 '
1030 cls:sprites on:bitmap on:bitmap clear 0
1040 initialise()
1050 newLevel(level)
1060 repeat
1070 repeat
1080 if event(moveEnemies,4)
1090 updateEnemies()
1100 n = random(mcount):if remain(n) = 0 then launch(n)
1110 endif
1120 if event(moveMissiles,6) then moveMissiles()
1130 if event(movePlayer,3) then movePlayer()
1140 until collectZeroCount = 0 | playerHit
1150 if playerHit
1160 lives = lives-1:updateLives():resetmissiles()
1170 playerHit = False:flashplayer()
1180 else
1190 level = level+1:newLevel(level)
1200 score = score + 1000*level:updateScore()
1210 endif
1220 until lives = 0
1230 bitmap clear 0:sprites off
1240 end
1250 '
1260 ' "Set up a new game"
1270 '
1280 proc initialise()
1290 xSize = 14:ySize = 11:mCount = 8
1300 xOrg = 160-xSize*8:yOrg = 140-ySize*8
1310 dim x(7),y(7),xi(7),yi(7),remain(7)
1320 dim collect(xSize-1,ySize-1)
1330 score = 0:lives = 3:level = 0
1340 endproc
1350 '
1360 ' "Move the player"
1370 '
1380 proc movePlayer()
1390 local x,y
1400 x = joyx(0):y = joyy(0)
1410 if x <> 0 & (yPlayer & 15) = 0 then xiPlayer = x * 4:yiPlayer = 0:iPlayer = 1-x
1420 if y <> 0 & (xPlayer & 15) = 0 then yiPlayer = y * 4:xiPlayer = 0:iPlayer = 2-y
1430 if (xPlayer | yPlayer & 15) = 0 then checkCollect(xPlayer >> 4,yPlayer >> 4)
1440 xPlayer = min((xSize-1) << 4,max(0,xPlayer + xiPlayer))
1450 yPlayer = min((ySize-1) << 4,max(0,yPlayer + yiPlayer))
1460 sprite 50 image iPlayer to xOrg+xPlayer,yOrg+yPlayer
1470 endproc
1480 '
1490 ' "Flash the player"
1500 '
1510 proc flashplayer()
1520 local t:t = timer() + 140
1530 while timer() < t
1540 if timer() & 16:sprite 50 image iPlayer:else sprite 50 off:endif
1550 wend
1560 endproc
1570 '
1580 ' "Fire a new missile from slot 'n'"
1590 '
1600 proc launch(n)
1610 if random() & 1:horizontalLaunch(n):else:verticalLaunch(n):endif
1620 endproc
1630 '
1640 ' "Launch a missile from top or bottom"
1650 '
1660 proc verticalLaunch(n)
1670 x(n) = xOrg-16:y(n) = yOrg+((yFire+8) & $F0):xi(n) = 4:yi(n) = 0
1680 remain(n) = abs((xSize*16+16) / xi(n))
1690 if random() & 1 then x(n) = x(n) + remain(n)*xi(n):xi(n) = -xi(n)
1700 sprite n image 11 to x(n),y(n)
1710 endproc
1720 '
1730 ' "Launch a missile from left or right"
1740 '
1750 proc horizontalLaunch(n)
1760 y(n) = yOrg-16:x(n) = xOrg+((xFire+8) & $F0):yi(n) = 4:xi(n) = 0
1770 remain(n) = abs((ySize*16+16) / yi(n))
1780 if random() & 1 then y(n) = y(n) + remain(n)*yi(n):yi(n) = -yi(n)
1790 sprite n image 12 to x(n),y(n)
1800 endproc
1810 '
1820 ' "Move all missiles"
1830 '
1840 proc moveMissiles()
1850 local i
1860 for i = 0 to mCount-1
1870 if remain(i) > 0
1880 x(i) = x(i)+xi(i):y(i) = y(i)+yi(i)
1890 if hit(i,50) > 0 then if hit(i,50) < 10 then playerHit = True
1900 remain(i) = remain(i)-1
1910 if remain(i) > 0:sprite i to x(i),y(i):else:sprite i off:endif
1920 endif
1930 next
1940 endproc
1950 '
1960 ' "Start a new level"
1970 '
1980 proc newLevel(n)
1990 local x,y,c$
2000 bitmap clear 0
2010 drawBackground():resetmissiles():updateEnemies()
2020 xPlayer = xSize\2*16:yPlayer = ySize\2*16:iPlayer = 0:xiPlayer = 0:yiPlayer = 0
2030 sprite 50 image iPlayer to xOrg+xPlayer,yOrg+yPlayer:playerHit = False
2040 for x = 0 to xSize-1:for y = 0 to ySize-1:collect(x,y) = 0:next:next
2050 collectZeroCount = 0
2060 getLevelData(level % 6):p = 1:if level >= 6 then p = 2
2070 for x = 0 to 6:for y = 0 to 4
2080 c$ = mid$(level$,x+y*8+1,1):if c$ = "X" then setqcollect(x,y,p)
2090 next:next:mCount = min(3+level\3,7)
2100 endproc
2110 '
2120 ' "Check collection"
2130 '
2140 proc checkCollect(x,y)
2150 if collect(x,y) <> 0
2160 local n:n = collect(x,y)-1:collect(x,y) = n
2170 renderCollect(x,y,n)
2180 if n = 0 then collectZeroCount = collectZeroCount - 1
2190 score = score + 25:updateScore()
2200 endif
2210 endproc
2220 '
2230 ' "Update score"
2240 '
2250 proc updateScore()
2260 text right$("00000"+str$(score),6) dim 1 colour $1F,4 to 80-24,12
2270 endproc
2280 '
2290 ' "Update lives display"
2300 '
2310 proc updateLives()
2320 rect solid colour 0 from 240,6 to 300,16
2330 if lives > 0
2340 for i = 1 to lives
2350 image 10 to 240+i*12,8
2360 next
2370 endif
2380 endproc
2390 '
2400 ' "Set the collection in all 4 quadrant"
2410 '
2420 proc setqcollect(x,y,n)
2430 setcollect(x,y,n):setcollect(xSize-1-x,y,n):setcollect(x,ySize-1-y,n):setcollect(xSize-1-x,ySize-1-y,n)
2440 endproc
2450 '
2460 ' "Set the collect for one cell (non-erase, creation *only*)"
2470 '
2480 proc setcollect(x,y,n)
2490 if collect(x,y) = 0
2500 collectZeroCount = collectZeroCount + 1
2510 collect(x,y) = n
2520 renderCollect(x,y,n)
2530 endif
2540 endproc
2550 '
2560 ' "Render a collection item 0,1,2. 0 Erases. These are drawn on the background not sprites."
2570 '
2580 proc renderCollect(x,y,n)
2590 if n > 0
2600 image 7+n dim 1 to x*16+xOrg-4+1,y*16+yOrg-4+1
2610 else
2620 local xc,yc:xc = x * 16+xOrg:yc = y * 16 + yOrg
2630 rect solid colour $0 from xc-6,yc-6 to xc+6,yc+6
2640 line colour $25 from xc-6,yc to xc+6,yc from xc,yc-6 to xc,yc+6
2650 endif
2660 endproc
2670 '
2680 ' "Reset all Missiles"
2690 '
2700 proc resetmissiles()
2710 local i
2720 for i = 0 to 7:remain(i) = 0:sprite i off:next
2730 endproc
2740 '
2750 ' "Draw the screen background"
2760 '
2770 proc drawBackground()
2780 local x,y:line colour $25
2790 for x = 0 to xSize-1:line xOrg+x*16,yOrg-8 by 0,ySize*16:next
2800 for y = 0 to ySize-1:line xOrg-8,yOrg+y*16 by xSize*16,0:next
2810 rect colour $E0 outline xOrg-24,yOrg-24 by xSize*16+32,ySize*16+32
2820 rect colour $FF outline xOrg-25,yOrg-25 by xSize*16+34,ySize*16+34
2830 updateScore():text "1 Up" colour $E0 to 64,2:updateLives()
2840 endproc
2850 '
2860 ' "Use the timer to set the positions of the shooting enemies"
2870 '
2880 proc updateEnemies()
2890 local t:t = timer()
2900 xFire = abs((t % (xSize << 5))-(xSize << 4))
2910 sprite 10 image 5 to xOrg+xFire,yOrg-16
2920 sprite 11 image 7 to xOrg+xFire,yOrg+ySize<<4
2930 yFire = abs((t % (ySize << 5))-(ySize << 4))
2940 sprite 12 image 4 to xOrg-16,yOrg+yFire
2950 sprite 13 image 6 to xOrg+xSize<<4,yOrg+yFire
2960 endproc
2970 '
2980 ' "Level data"
2990 '
3000 proc getLevelData(n)
3010 level$ = ""
3020 if n = 0 then level$ = "....XXX ...XXX. ..XXX.. ..XXX.. .XXXX.."
3030 if n = 1 then level$ = "....XXX ...XXXX ..XXXXX .XXXXXX XXXXXXX"
3040 if n = 2 then level$ = "XXXXXXX X...... X...... XXXXXXX ......."
3050 if n = 3 then level$ = "XXXXX.. X...X.. X...XXX XXXXX.. ....X.."
3060 if n = 4 then level$ = ".....X. ....XX. ..XX.X. X....X. XXXXXX."
3070 if n = 5 then level$ = ".....X. ....XX. .XXX.X. X....X. XXXXXX."
3080 if n = 6 then level$ = "XX..... .XX.... ..XX... ....XX. .....XX
3090 endproc
每每每每

